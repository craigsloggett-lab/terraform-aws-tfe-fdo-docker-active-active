name: Integrate

on: pull_request

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TF_TOKEN_app_terraform_io: ${{ secrets.HCP_TERRAFORM_ADMIN_TEAM_TOKEN }}
  TFE_VERSION: ${{ vars.TFE_VERSION }}
  ROUTE53_ZONE_NAME: ${{ vars.ROUTE53_ZONE_NAME }}
  EC2_BASTION_SSH_PUBLIC_KEY: ${{ vars.EC2_BASTION_SSH_PUBLIC_KEY }}

jobs:
  deploy-terraform-module:
    name: Deploy Terraform Module
    runs-on: ubuntu-24.04
    outputs:
      workspace-id: ${{ steps.create-hcp-terraform-workspace.outputs.workspace-id }}
      workspace-name: ${{ steps.create-hcp-terraform-workspace.outputs.workspace-name }}
    env:
      LOG_FILE: log.txt
    steps:
      - name: Checkout
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
      - name: Create an HCP Terraform Workspace
        id: create-hcp-terraform-workspace
        env:
          COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
        run: |
          .github/scripts/create_a_workspace.sh
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: 1.10.3
      - name: Generate Terraform Configuration
        env:
          WORKSPACE_NAME: ${{ steps.create-hcp-terraform-workspace.outputs.workspace-name }}
          COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
        run: |
          .github/scripts/generate_tfvars.sh
          .github/scripts/generate_terraform_cloud_block.sh
      - name: Start a Plan and Apply Run
        run: |
          terraform init
          terraform plan -no-color -var "tfe_license=${{ secrets.TFE_LICENSE }}" | tee "${LOG_FILE}"
      - name: Cancel Outdated Terraform Run
        if: cancelled()
        id: cancel-terraform-run
        run: |
          .github/scripts/cancel_a_run.sh
  validate-deployment:
    name: Validate Deployment
    runs-on: ubuntu-24.04
    if: always()
    needs: deploy-terraform-module
    steps:
      - name: Checkout
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
      - name: Validate TFE Endpoint
        if: needs.deploy-terraform-module.result == 'success'
        run: |
          sleep 10
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: 1.10.3
      - name: Generate Terraform Configuration
        env:
          WORKSPACE_NAME: ${{ needs.deploy-terraform-module.outputs.workspace-name }}
          COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
        run: |
          .github/scripts/generate_tfvars.sh
          .github/scripts/generate_terraform_cloud_block.sh
      - name: Queue a Destroy Plan
        env:
          WORKSPACE_ID: ${{ needs.deploy-terraform-module.outputs.workspace-id }}
          TFE_LICENSE: ${{ secrets.TFE_LICENSE }}
        run: |
          terraform init
          terraform destroy -auto-approve -var "tfe_license=${{ secrets.TFE_LICENSE }}"
      - name: Delete the HCP Terraform Workspace
        env:
          WORKSPACE_ID: ${{ needs.deploy-terraform-module.outputs.workspace-id }}
        run: |
          .github/scripts/safe_delete_a_workspace.sh
